<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!-- 加载配置属性文件 -->
    	<context:property-placeholder ignore-unresolvable="true" location="classpath:properties/common.properties" />
    
    <!-- 静态资源映射 -->
    
    <mvc:resources mapping="/static/**" location="/static/" cache-period="31536000"/>
    <!--
    <mvc:interceptors>
		<bean class="com.rowell.sifa.web.interceptor.LoginInterceptor"></bean>
	</mvc:interceptors>
	-->
    <!-- 配置包扫描器 -->    
    <context:component-scan base-package="com.rowell.sifa.web">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!-- 拦截器配置，拦截顺序：先执行后定义的，排在第一位的最后执行。-->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/sys/login"/>
			<mvc:exclude-mapping path="/static/**"/>
			<mvc:exclude-mapping path="/sys/sysDic/**"/>
			<mvc:exclude-mapping path="/sys/sysGroup/**"/>
			<bean class="com.rowell.sifa.sys.interceptor.SysLogInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
    <!-- 配置注解驱动 -->
    <!-- 默认的注解映射的支持，org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -->
	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
		
		
		<mvc:message-converters register-defaults="true">
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
		    	<constructor-arg value="UTF-8" />
			</bean>
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
		    	<constructor-arg value="UTF-8" />
			</bean>
	-->
     <bean id="mappingJackson2HttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">

        <property name="supportedMediaTypes">

            <list>

                <value>text/html;charset=UTF-8</value>

                <value>text/json;charset=UTF-8</value>

                <value>application/json;charset=UTF-8</value>

            </list>

        </property>

    </bean>
		</mvc:message-converters>
		
		
	</mvc:annotation-driven>
	
	
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
  
  <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"></bean>
   

 <!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
	    <property name="mediaTypes" >
	        <map> 
                <entry key="xml" value="application/xml"/> 
                <entry key="json" value="application/json"/> 
            </map>
	    </property>
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="favorPathExtension" value="true"/>
	</bean>
	  <!-- REST中根据URL后缀自动判定Content-Type及相应的View 
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
	    <property name="mediaTypes" >
	        <map> 
                <entry key="xml" value="application/xml"/> 
                <entry key="json" value="application/json"/> 
            </map>
	    </property>
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="favorPathExtension" value="true"/>
	</bean>
	-->
    
    <!-- 支持Shiro对Controller的方法级AOP安全控制 begin
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	-->
	
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="org.apache.shiro.authz.UnauthorizedException">error/403</prop>
				<prop key="java.lang.Throwable">error/500</prop>
			</props>
			</property>
	</bean>
	
	
    
    <!-- 拦截器配置，拦截顺序：先执行后定义的，排在第一位的最后执行。
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/sys/login"/>
			<bean class="com.rowell.gis.sys.interceptor.LogInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	-->
    <!-- 视图解析器 -->
    <bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="${web.view.prefix}"/>
		<property name="suffix" value="${web.view.suffix}"/>
	</bean>
	<!-- 上传文件拦截，设置最大上传文件大小   10M=10*1024*1024(B)=10485760 bytes -->  
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
		<property name="defaultEncoding" value="UTF-8"></property>
		<property name="maxUploadSize" value="${web.maxUploadSize}" />  
	</bean>
	
</beans>        
